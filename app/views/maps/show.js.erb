<p id="notice"><%= notice %></p>

<script>
  var xOffset = 0;
  var yOffset = 0;
  var edgeSize = 15;
  var edgeWidth = 1;
  var previousPointX;
  var previousPointY;
  var down = false;
  var hex;
  var context;
  var mouseDown = false;

  window.onload = function() {
      canvas = document.getElementById("myCanvas");
      hex = new hexDefinition(edgeSize);
      render();

      var drawBackground = function(e) {
        down = false;
        var x;
        var y;
        if (e.pageX || e.pageY) {
          x = e.pageX;
          y = e.pageY;
        }
        else {
          x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
          y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
        }
        x -= canvas.offsetLeft;
        y -= canvas.offsetTop;

        var result = hex.getReferencePoint(x - xOffset, y - yOffset);
        //$.get("/hexes/1/"+result.u+"/"+result.v, function( data ) { console.log( "Data Returned: " + data ); });
        var img = new Image();
        img.src = "<%= asset_path('CultFarm.png') %>";
        var center = hex.getPixelCoordinates(result.u, result.v);
        imx = (center.x - hex.s / 2.0) - 6.75 + xOffset;
        imy = (center.y - hex.a / 2.0) - 0.4 + yOffset;
        addon = 5.75;
        context.drawImage(img,imx,imy,hex.hexagon_narrow_width+addon,hex.hexagon_narrow_width+addon);
      }

      canvas.onmousedown = function(e) {
        mouseDown = true;
      };
      canvas.onmouseup = function(e) {
        mouseDown = false;
        drawBackground(e);
      };
      canvas.onmousemove = function(e) {
        if(mouseDown) {
          drawBackground(e);
        };
      };
    };

    function drawHex(context, hexCoordinates) {
      var center = hex.getPixelCoordinates(hexCoordinates.u, hexCoordinates.v);
      context.beginPath();
      
      context.moveTo((center.x - hex.b / 2.0) + xOffset, center.y + yOffset );
      context.lineTo((center.x - hex.s / 2.0) + xOffset, (center.y - hex.a / 2.0) + yOffset);
      context.lineTo((center.x + hex.s / 2.0) + xOffset, (center.y - hex.a / 2.0) + yOffset);
      context.lineTo((center.x + hex.b / 2.0) + xOffset, center.y + yOffset);
      context.lineTo((center.x + hex.s / 2.0) + xOffset, (center.y + hex.a / 2.0) + yOffset);
      context.lineTo((center.x - hex.s / 2.0) + xOffset, (center.y + hex.a / 2.0)  + yOffset);
      context.lineTo((center.x - hex.b / 2.0) + xOffset, center.y + yOffset);
      context.lineWidth = edgeWidth;
      context.strokeStyle = "#444";

      context.fillStyle = "rgba(190, 190, 190, 0.25)";
      context.fill();
            
      context.stroke();   
    }


    function render() {
      var canvas = document.getElementById("myCanvas");
      context = canvas.getContext("2d");
      context.clearRect(0, 0, <%= @map.width =%>, <%= @map.length =%>);
      drawHexagonGrid(context);
    }

    function drawHexagonGrid(context) {
      var date1 = new Date().getTime();
      var rows = 100;
      var columns = 100;
      var topLeftHex = hex.getReferencePoint(0 - xOffset,0 - yOffset);
      var bottomLeftHex = hex.getReferencePoint(0 - xOffset,<%= @map.length =%> - yOffset);
      var topRightHex = hex.getReferencePoint(<%= @map.width =%> - xOffset,0 - yOffset);
      var offset = 0;
      for (var i = topLeftHex.u - 1; i <= topRightHex.u + 1; i++) {
        for (var j = topLeftHex.v - 1 - Math.round(offset); j < bottomLeftHex.v + 1 - Math.round(offset); j++) {
          drawHex(context, {u:i, v:j});
          //jQuery.get("/hexes/1/"+i+"/"+j, function( data ) { console.log( "Data Returned: " + data ); });
        }
	offset = offset == 0 ? 0.5 : 0;
      }
      var date2 = new Date().getTime();
      document.getElementById("result").innerHTML = "Draw Time: " + (date2 - date1) + " ms";
    }
  </script>

  <div id="result">Draw Time: 27 ms</div>

  <canvas id="myCanvas" width="<%= @map.width =%>" height="<%= @map.length =%>"> </canvas>

<%= link_to 'Edit', edit_map_path(@map) %> |
<%= link_to 'Back', maps_path %>
